type
 TADS=class(TADOconnection) //для ловли "неуловимых" ошибок
  procedure ADOConnectionExecuteComplete(Connection: TADOConnection; RecordsAffected: Integer; const Error: ADODB.Error;
   var EventStatus: TEventStatus; const Command: _Command; const Recordset: _Recordset);
end;

//type ADOConnectionExecuteComplete=class of TExecuteCompleteEvent;end;

TConvertRegister = (crNone, crUpperCase, crLowerCase, crFirstCapital);

       ADD:=TADS.Create(nil); без ODBC обойдемся
       ADD.LoginPrompt:=false;
       ADD.OnExecuteComplete:=ADD.ADOConnectionExecuteComplete;
      with ADD do begin
       //ConnectionString:=SetODBCConnectionString(LinkPath); //можно задать все параметры - прок в комментах в конце
       ConnectionString:='Provider=MSDASQL.1;Data Source='+LinkSrv+';';
         KWriteLn('>DBF_StrBefore: '+ConnectionString);
       Open;
         KWriteLn('>DBF_StrAfOpen: '+ConnectionString);
       Close;
      end;

type
TSQLPart = (spSelect, spFrom, spWhere, spGroup, spHaving, spOrder, spEndSQL);

SQLDelimiter : array [TSQLPart] of String = ('/*SELECT*/', '/*FROM*/', '/*WHERE*/',
    '/*GROUP_BY*/', '/*HAVING*/', '/*ORDER_BY*/', '/*END_SQL_TEXT*/');

resourcestring
  SKeyFields      = '%s: Количество ключевых полей не соответствует числу параметров запроса.';
  SBadParams      = '%s: Неверные параметры вызова.';

  ResStream : TResourceStream;
  s         : string;
begin
 Result:='';
 try try
   ResStream := TResourceStream.Create(hInstance, 'STRONG', 'CONNECT');
    s:=StrPas(ResStream.Memory); //for i:=1 to Length(s) do s[i]:=char(byte(s[i]) xor $a5);
   Result:=s;


procedure WriteConnectStringToDLL;
var
  LibHandle : THandle;
  s         : ANSIString;
begin
  s:=ConnectionStr+#0;
  //for i:=1 to Length(s) do s[i]:=char(byte(s[i]) xor $a5); s:=s+#0;
    LibHandle:=BeginUpdateResource(PChar(CurDir+DllName),false);
  if LibHandle <> 0 then try
    UpdateResource(LibHandle,	// update-file handle
     'CONNECT',	                // address of resource type to update
     'STRONG',                  // MAKEINTRESOURCE(16),	// address of resource name to update
     $0019,                     //MAKELANGID(LANG_ENGLISH,SUBLANG_ENGLISH_UK),  // language identifier of resource
     @s[1],	                // address of resource data
     Length(s)); 	        // length of resource data, in bytes
    MWriteLn('WriteConnection: '+SysErrorMessage(GetLastError),true);
  finally
   EndUpdateResource(LibHandle,false);
  end;
end;




var
  AddDataModule: procedure (DataModule: TDataModule) of object = nil;

constructor CreateNew(AOwner: TComponent; Dummy: Integer = 0); virtual;

constructor TDataModule.CreateNew(AOwner: TComponent; Dummy: Integer);
begin
  inherited Create(AOwner);

  if Assigned(AddDataModule) and (Dummy >= 0) then
    AddDataModule(Self);
end;


